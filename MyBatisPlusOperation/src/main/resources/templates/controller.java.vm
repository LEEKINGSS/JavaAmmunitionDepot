package ${package.Controller};

import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import ${package.Parent}.common.*;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.RequestBody;
import ${package.Parent}.service.${table.serviceName};
import ${package.Parent}.entity.${table.entityName};

import java.util.List;

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "$!{table.comment} API")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} i${table.entityName}Service;

    /**
     * 分页列表查询
     */
    @PostMapping("/listByPage")
    @ApiOperation("分页列表查询")
    public Response list(@RequestBody PageQuery<${table.entityName}> pageQuery) {
        Page ${table.entityPath}Page = getPage(pageQuery);
        Page page = i${table.entityName}Service.page(${table.entityPath}Page, Wrappers.lambdaQuery(pageQuery.getObj()));
        return Response.getInstance().setOk(Response.CodeEnum.SUCCESSED, "", "success", page);
    }

    /**
     * 普通列表查询
     */
    @PostMapping("/list")
    @ApiOperation("普通列表查询")
    public Response list(@RequestBody ${table.entityName} ${table.entityPath}) {
        List<${table.entityName}> list = i${table.entityName}Service.list(Wrappers.lambdaQuery(${table.entityPath}));
        return Response.getInstance().setOk(Response.CodeEnum.SUCCESSED, "", "success", list);
    }

    /**
     * 根据id获取数据
     */
    @GetMapping("/get")
    @ApiOperation("根据id获取数据")
    public Response get(String id) {
        ${table.entityName} ${table.entityPath} = i${table.entityName}Service.getById(id);
        return Response.getInstance().setOk(Response.CodeEnum.SUCCESSED, "", "success", ${table.entityPath});
    }

    /**
     * 添加数据
     */
    @PostMapping("/save")
    @ApiOperation("添加数据")
    public Response save(@RequestBody ${table.entityName} ${table.entityPath}) {
        i${table.entityName}Service.save(${table.entityPath});
        return Response.getInstance().setOk(Response.CodeEnum.SUCCESSED, "", "success", ${table.entityPath});
    }

    /**
     * 更新数据
     */
    @PostMapping("/update")
    @ApiOperation("更新数据")
    public Response update(@RequestBody ${table.entityName} ${table.entityPath}) {
        i${table.entityName}Service.updateById(${table.entityPath});
        return Response.getInstance().setOk(Response.CodeEnum.SUCCESSED, "", "success", ${table.entityPath});
    }

    /**
     * 删除数据(可批量删除)
     */
    @PostMapping("/remove")
    @ApiOperation("删除数据(可批量删除)")
    public Response remove(@RequestBody List<String> ids) {
        i${table.entityName}Service.removeByIds(ids);
        return Response.getInstance().setOk(Response.CodeEnum.SUCCESSED, "", "success", null);
    }

}

#end